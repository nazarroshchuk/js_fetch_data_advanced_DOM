{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","json","getFirstReceivedDetails","phones","Promise","race","map","phone","resolve","id","getAllSuccessfulDetails","allSettled","filter","status","value","firstReceived","document","createElement","classList","add","insertAdjacentHTML","JSON","stringify","body","append","allSuccessful","list","el","toUpperCase","getThreeFastestDetails","all","result","threeFastest"],"mappings":"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","file":"main.2785705e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api/';\n\nconst request = (url = '') => {\n  return fetch(`${BASE_URL}phones${url}.json`)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n};\n\nconst getFirstReceivedDetails = () => {\n  return request()\n    .then(phones => Promise.race(phones.map(phone => new Promise(\n      resolve => resolve(request(`/${phone.id}`)),\n    ))));\n};\n\nconst getAllSuccessfulDetails = () => {\n  return request()\n    .then(phones => Promise.allSettled(phones.map(phone => new Promise(\n      resolve => resolve(request(`/${phone.id}`)),\n    ))))\n    .then(phones => phones.filter(phone => phone.status === 'fulfilled'))\n    .then(phones => phones.map(phone => phone.value));\n};\n\ngetFirstReceivedDetails()\n  .then(response => {\n    const firstReceived = document.createElement('div');\n\n    firstReceived.classList.add('first-received');\n\n    firstReceived.insertAdjacentHTML('afterbegin', `\n      <h3>First Received</h3>\n      <ul>\n        <li>${JSON.stringify(response)}</li>\n      </ul>\n    `);\n\n    document.body.append(firstReceived);\n  });\n\ngetAllSuccessfulDetails()\n  .then(response => {\n    const allSuccessful = document.createElement('div');\n\n    allSuccessful.classList.add('all-successful');\n\n    allSuccessful.insertAdjacentHTML('afterbegin', `\n      <h3>All Successful</h3>\n    `);\n\n    const list = document.createElement('ul');\n\n    for (const el of response) {\n      list.insertAdjacentHTML('afterbegin', `\n          <li>\n            <h4>${el.id.toUpperCase()}</h4>\n            <p>${JSON.stringify(el)}</p>\n          </li>\n     `);\n    }\n\n    allSuccessful.append(list);\n    document.body.append(allSuccessful);\n  });\n\nconst getThreeFastestDetails = () => {\n  return Promise.all([\n    getFirstReceivedDetails(),\n    getFirstReceivedDetails(),\n    getFirstReceivedDetails(),\n  ]);\n};\n\ngetThreeFastestDetails()\n  .then(result => {\n    const threeFastest = document.createElement('div');\n\n    threeFastest.insertAdjacentHTML('afterbegin', `\n      <h3>Three were received</h3>\n    `);\n\n    document.body.append(threeFastest);\n  });\n"]}